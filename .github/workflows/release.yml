name: Build and Publish package to GitHub Packages
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-[a-z]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD
          cache: 'maven'
      - name: Get version
        id: version
        run: |
          echo "parsing version from ref '$GITHUB_REF'"

          VERSION=$(echo "$GITHUB_REF"  | sed -e "s|refs/tags/||g" | sed -E 's/v?([0-9]+)\.([0-9]+)\.([0-9]+)(-[a-zA-Z]+(\.[0-9]+)?)?/\1.\2.\3\4/g')
          echo "version: '$VERSION'"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Update Version
        run: |
          echo "updating version to '$VERSION'"
          mvn -B versions:set "-DnewVersion=$VERSION"
      - name: Publish package
        run: |
          echo -n "$MAVEN_GPG_KEY" | gpg --import --batch
          mvn --batch-mode -Prelease deploy
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_TR_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_TR_KEY }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      # release the corresponding docker image
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Image
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          make dist RELEASE_TAG=v$VERSION
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/epa4all-rest-service/')
        with:
          name: ${{ steps.version.outputs.version }}
          body: |
            Docker image: `ghcr.io/oviva-ag/konnektor-watchdog:v${{ steps.version.outputs.version }}`
          files: |
            target/konnektor-watchdog.jar
